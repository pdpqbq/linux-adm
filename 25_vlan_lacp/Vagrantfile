# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "testLAN"}
                ]
  },
  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "testLAN"}
                ]
  },
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "testLAN"}
                ]
  },
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "testLAN"}
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "bond-net"},
                   {adapter: 3, virtualbox__intnet: "bond-net"}
                ]
  },
  :inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, virtualbox__intnet: "bond-net"},
                   {adapter: 3, virtualbox__intnet: "bond-net"}
                ]
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL

        case boxname.to_s
        when "testClient1"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "tc1"
        when "testClient2"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "tc2"
        when "testServer1"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "ts1"
        when "testServer2"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "ts2"
        when "centralRouter"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "bond"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "cr"
        when "inetRouter"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "bond"
          box.vm.provision "ansible", playbook: "ansible.yml", tags: "ir"
        end
      end
  end
end
